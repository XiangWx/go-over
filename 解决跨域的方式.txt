解决跨域：
一。JSONP：
json数据格式的一种使用方式，原理是利用script标签的src属性，发送请求不受同源策略的限制，来实现跨域资源共享
jsonp只能实现get请求
步骤：创建script 指定src  插入到文档中

二。CORS：
跨域资源共享，在服务器端返回数据的时候添加相应头
res.header("Access-Control-Allow-Origin", "*");
在后端方面通过安装cors包解决，但是cors是指定对应的ip和域来访问，如果换个端口什么的，还是会出现跨域问题

三。代理
由于跨域在服务器端是不存在的，所以在客户端所在电脑上搭建一个服务器作为中间人就可以了
vue使用代理的方式：
1.在项目目录 config 目录下的 index.js 文件 
2.找到dev代码块
     module.export ={
	dev:{
                  assetsSubDirectory:'static',
	   assetsPublicPath:'/',
	   proxyTsble:{
	‘/api’:{
	target:'http://xxx',
	changeOrigin:true,
	pathRewrite:{
	    '^/api':' '
	}
	}
	}
   	}
      }
主要是修改  proxyTsble:{} 内的数据
参数说明
target: 接口域名
changeOrigin: true, 表示是否跨域
pathRewrite: {‘^/api’: ”} 表示需要rewrite重写的,
配置好这写之后就可以直接使用/api+接口名称发送请求了
例如:原来的请求地址为 192.168.1.1:8080/log
配置代理后直接使用 /api/log 就可以了

